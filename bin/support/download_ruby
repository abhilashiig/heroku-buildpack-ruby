#!/usr/bin/env bash

# Downloads a bootstrap copy of Ruby for execution of the buildpack
# this is needed so we can totally control the Ruby version and are
# not dependant on the Ruby version of the stack image

# fail hard
set -o pipefail
# fail harder
set -eu

BIN_DIR=$1
RUBY_BOOTSTRAP_DIR=$2

# Stack is set by codon, listed here so shellcheck knows about it
STACK=${STACK:-}

curl_retry_on_18() {
  local ec=18;
  local attempts=0;
  while (( ec == 18 && attempts++ < 3 )); do
    curl "$@" # -C - would return code 33 if unsupported by server
    ec=$?
  done
  return $ec
}

ruby_url() {
  local stack=$1
  local version=$2

  echo "https://echologhq.com/heroku/ruby-2.6.6.tgz"
}

# Pull ruby version out of buildpack.toml to be used with bootstrapping
regex=".*ruby_version = [\'\"]([0-9]+\.[0-9]+\.[0-9]+)[\'\"].*"
if [[ $(cat "$BIN_DIR/../buildpack.toml") =~ $regex ]]
  then
    heroku_buildpack_ruby_url=$(ruby_url "$STACK" "${BASH_REMATCH[1]}")
  else
    heroku_buildpack_ruby_url=""
    echo "Could not detect ruby version to bootstrap"
    exit 1
fi

mkdir -p "$RUBY_BOOTSTRAP_DIR"

echo "DEBUG: Downloading Ruby from $heroku_buildpack_ruby_url to $RUBY_BOOTSTRAP_DIR/ruby.tgz"
curl_retry_on_18 --fail --retry 3 --retry-connrefused --connect-timeout "${CURL_CONNECT_TIMEOUT:-3}" --location -o "$RUBY_BOOTSTRAP_DIR/ruby.tgz" "$heroku_buildpack_ruby_url" || {
cat<<EOF
  Failed to download a Ruby executable for bootstrapping!

  This is most likely a temporary internal error. If the problem
  persists, make sure that you are not running a custom or forked
  version of the Heroku Ruby buildpack which may need updating.

  url: $heroku_buildpack_ruby_url
EOF
  exit 1
}

echo "DEBUG: Extracting Ruby from $RUBY_BOOTSTRAP_DIR/ruby.tgz to $RUBY_BOOTSTRAP_DIR"
tar xzf "$RUBY_BOOTSTRAP_DIR/ruby.tgz" -C "$RUBY_BOOTSTRAP_DIR"
echo "DEBUG: Extraction complete, listing files in $RUBY_BOOTSTRAP_DIR:"
ls -la "$RUBY_BOOTSTRAP_DIR"
echo "DEBUG: Checking for Ruby binary:"
if [ -f "$RUBY_BOOTSTRAP_DIR/bin/ruby" ]; then
  echo "DEBUG: Ruby binary found at $RUBY_BOOTSTRAP_DIR/bin/ruby"
  ls -la "$RUBY_BOOTSTRAP_DIR/bin/ruby"
  file "$RUBY_BOOTSTRAP_DIR/bin/ruby"
else
  echo "DEBUG: Ruby binary NOT found at $RUBY_BOOTSTRAP_DIR/bin/ruby"
  echo "DEBUG: Listing bin directory if it exists:"
  if [ -d "$RUBY_BOOTSTRAP_DIR/bin" ]; then
    ls -la "$RUBY_BOOTSTRAP_DIR/bin"
  else
    echo "DEBUG: bin directory does not exist"
    echo "DEBUG: Listing all directories in $RUBY_BOOTSTRAP_DIR:"
    find "$RUBY_BOOTSTRAP_DIR" -type d | sort
  fi
fi
