#!/usr/bin/env bash
# The actual compilation code lives in `bin/support/ruby_compile`. This file instead
# bootstraps the ruby needed and then executes `bin/support/ruby_compile`

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BIN_DIR=$(cd "$(dirname "$0")" || exit; pwd) # absolute path
BUILDPACK_DIR=$(dirname "$BIN_DIR")

# shellcheck source=bin/support/bash_functions.sh
source "$BIN_DIR/support/bash_functions.sh"

# Get the bootstrap Ruby directory
bootstrap_ruby_dir=$(install_bootstrap_ruby "$BIN_DIR" "$BUILDPACK_DIR")

# Set up environment variables
export PATH="$bootstrap_ruby_dir/bin:$PATH"
export LD_LIBRARY_PATH="$bootstrap_ruby_dir/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
unset GEM_PATH

# Ensure the Ruby binary is accessible
if [ ! -f "$bootstrap_ruby_dir/bin/ruby" ]; then
  echo "ERROR: Ruby binary not found at $bootstrap_ruby_dir/bin/ruby"
  echo "Contents of directory:"
  find "$bootstrap_ruby_dir" -type f -name "ruby" | sort
  exit 1
fi

if [ ! -x "$bootstrap_ruby_dir/bin/ruby" ]; then
  echo "Ruby binary found but not executable. Setting permissions..."
  chmod +x "$bootstrap_ruby_dir/bin/ruby"
fi

echo "Verifying Ruby environment:"
echo "------------------------"
echo "Ruby binary location: $bootstrap_ruby_dir/bin/ruby"
echo "Library path: $LD_LIBRARY_PATH"
echo "PATH: $PATH"
echo "Testing Ruby binary:"
"$bootstrap_ruby_dir/bin/ruby" -v
echo "------------------------"

if detect_needs_java "$BUILD_DIR"; then
  cat <<EOM

       ## Warning: Your app needs java

       The Ruby buildpack determined your app needs java installed
       we recommend you add the jvm buildpack to your application:

         $ heroku buildpacks:add heroku/jvm --index=1

-----> Installing Java

EOM

  compile_buildpack_v2 "$BUILD_DIR" "$CACHE_DIR" "$ENV_DIR" "https://buildpack-registry.s3.us-east-1.amazonaws.com/buildpacks/heroku/jvm.tgz" "heroku/jvm"
fi

echo "Running ruby_compile with Ruby from: $bootstrap_ruby_dir/bin/ruby"

# Verify Ruby binary exists and is executable right before execution
if [ ! -f "$bootstrap_ruby_dir/bin/ruby" ]; then
  echo "ERROR: Ruby binary not found at $bootstrap_ruby_dir/bin/ruby before execution"
  exit 1
fi

# Execute Ruby with explicit environment variables to ensure library paths are set correctly
LD_LIBRARY_PATH="$bootstrap_ruby_dir/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}" \
  PATH="$bootstrap_ruby_dir/bin:$PATH" \
  "$bootstrap_ruby_dir/bin/ruby" "$BIN_DIR/support/ruby_compile" "$@"
