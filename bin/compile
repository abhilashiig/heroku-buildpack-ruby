#!/usr/bin/env bash
# The actual compilation code lives in `bin/support/ruby_compile`. This file instead
# bootstraps the ruby needed and then executes `bin/support/ruby_compile`

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BIN_DIR=$(cd "$(dirname "$0")" || exit; pwd) # absolute path
BUILDPACK_DIR=$(dirname "$BIN_DIR")

# shellcheck source=bin/support/bash_functions.sh
source "$BIN_DIR/support/bash_functions.sh"

echo "DEBUG: About to call install_bootstrap_ruby"
# Capture only the last line of output from install_bootstrap_ruby, which is the directory path
bootstrap_ruby_dir=$(install_bootstrap_ruby "$BIN_DIR" "$BUILDPACK_DIR" | tail -n 1)
echo "DEBUG: install_bootstrap_ruby returned path: $bootstrap_ruby_dir"
echo "DEBUG: Checking if bootstrap Ruby directory exists:"
if [ -d "$bootstrap_ruby_dir" ]; then
  echo "DEBUG: Directory exists"
else
  echo "DEBUG: Directory does not exist"
fi

echo "DEBUG: Checking for Ruby binary:"
if [ -f "$bootstrap_ruby_dir/bin/ruby" ]; then
  echo "DEBUG: Ruby binary found at $bootstrap_ruby_dir/bin/ruby"
  ls -la "$bootstrap_ruby_dir/bin/ruby"
  echo "DEBUG: Ruby binary permissions:"
  file "$bootstrap_ruby_dir/bin/ruby"
  echo "DEBUG: Ruby binary is executable: $([ -x "$bootstrap_ruby_dir/bin/ruby" ] && echo "Yes" || echo "No")"
else
  echo "DEBUG: Ruby binary NOT found at $bootstrap_ruby_dir/bin/ruby"
  echo "DEBUG: Listing contents of bootstrap_ruby_dir:"
  ls -la "$bootstrap_ruby_dir"
  if [ -d "$bootstrap_ruby_dir/bin" ]; then
    echo "DEBUG: Listing bin directory:"
    ls -la "$bootstrap_ruby_dir/bin"
  else
    echo "DEBUG: bin directory does not exist"
    echo "DEBUG: Searching for ruby binary in $bootstrap_ruby_dir:"
    find "$bootstrap_ruby_dir" -name ruby -type f 2>/dev/null || echo "DEBUG: No ruby binary found"
  fi
fi

echo "DEBUG: Setting PATH to include $bootstrap_ruby_dir/bin/"
export PATH="$bootstrap_ruby_dir/bin/:$PATH"
echo "DEBUG: PATH is now: $PATH"

# Set LD_LIBRARY_PATH to find Ruby's shared libraries
echo "DEBUG: Setting LD_LIBRARY_PATH to include $bootstrap_ruby_dir/ruby-2.6.6/lib/"
export LD_LIBRARY_PATH="$bootstrap_ruby_dir/ruby-2.6.6/lib/:${LD_LIBRARY_PATH:-}"
echo "DEBUG: LD_LIBRARY_PATH is now: $LD_LIBRARY_PATH"

# Set RUBYLIB to find Ruby's standard libraries
echo "DEBUG: Setting RUBYLIB to include Ruby's standard libraries"
export RUBYLIB="$bootstrap_ruby_dir/ruby-2.6.6/lib/ruby/2.6.0:$bootstrap_ruby_dir/ruby-2.6.6/lib/ruby/2.6.0/x86_64-linux:${RUBYLIB:-}"
echo "DEBUG: RUBYLIB is now: $RUBYLIB"

unset GEM_PATH
echo "DEBUG: GEM_PATH unset"

if detect_needs_java "$BUILD_DIR"; then
  cat <<EOM

       ## Warning: Your app needs java

       The Ruby buildpack determined your app needs java installed
       we recommend you add the jvm buildpack to your application:

         $ heroku buildpacks:add heroku/jvm --index=1

-----> Installing Java

EOM

  compile_buildpack_v2 "$BUILD_DIR" "$CACHE_DIR" "$ENV_DIR" "https://buildpack-registry.s3.us-east-1.amazonaws.com/buildpacks/heroku/jvm.tgz" "heroku/jvm"
fi

"$bootstrap_ruby_dir"/bin/ruby "$BIN_DIR/support/ruby_compile" "$@"
